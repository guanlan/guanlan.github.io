<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Guanlan Dai</title>
    <link>https://rmmod.com/categories/python/</link>
    <description>Recent content in Python on Guanlan Dai</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Jul 2011 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://rmmod.com/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Basic Objects Learning Notes</title>
      <link>https://rmmod.com/posts/cppblog/2011-07-21-python-basic-objects-learning-notes-en/</link>
      <pubDate>Thu, 21 Jul 2011 00:00:00 +0800</pubDate>
      <guid>https://rmmod.com/posts/cppblog/2011-07-21-python-basic-objects-learning-notes-en/</guid>
      <description>&lt;p&gt;Recently revisiting the book &amp;ldquo;Python Source Code Analysis&amp;rdquo;, I&amp;rsquo;ve recorded the key points about Python basic objects as follows:&lt;/p&gt;&#xA;&lt;p&gt;â€‹    &lt;strong&gt;Python Integer Objects&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Python integers use C language&amp;rsquo;s long type for storage&lt;/li&gt;&#xA;&lt;li&gt;Python int addition checks if the result overflows, and automatically converts to pyLongObject if it does&lt;/li&gt;&#xA;&lt;li&gt;Documentation in Python is seamlessly integrated into the language implementation&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;python&#34;&gt;a = 11  &#xA;print a.__doc__&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Small integer objects are completely cached in memory, other integer objects take turns using a block of memory space&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
