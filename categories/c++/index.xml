<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on Guanlan Dai</title><link>https://rmmod.com/categories/c++/</link><description>Recent content in C++ on Guanlan Dai</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 24 Dec 2009 00:00:00 +0800</lastBuildDate><atom:link href="https://rmmod.com/categories/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>A 'Strange Phenomenon' in C/C++ Arrays</title><link>https://rmmod.com/posts/cppblog/2009-12-24-cc-array-peculiar-phenomenon-en/</link><pubDate>Thu, 24 Dec 2009 00:00:00 +0800</pubDate><guid>https://rmmod.com/posts/cppblog/2009-12-24-cc-array-peculiar-phenomenon-en/</guid><description>&lt;p>Everyone is familiar with using arrays, right?&lt;br>
Take a look at this program, it&amp;rsquo;s quite simple.&lt;/p>
&lt;pre>&lt;code class="cpp">#include&amp;lt;iostream&amp;gt;
int main()
{
 int a[] = {1,2,3,4,5};
 for(int i = 0 ; i &amp;lt; 5; i&amp;#43;&amp;#43;)
 std::cout &amp;lt;&amp;lt; i[a] &amp;lt;&amp;lt; &amp;#34; &amp;#34;;
 return 0;
}&lt;/code>&lt;/pre>
&lt;p>Now look carefully at line 6.&lt;br>
What did you notice?&lt;br>
Try compiling it to see if it passes?&lt;/p>
&lt;p>Let&amp;rsquo;s simplify this program even more&lt;/p>
&lt;pre>&lt;code class="cpp">int a[5] = {1,2,3,4,5};
int b = 1[a];&lt;/code>&lt;/pre>
&lt;p>Now let&amp;rsquo;s look at the generated assembly code&lt;/p></description></item><item><title>Random Thoughts Series 1 - C++ Thoughts</title><link>https://rmmod.com/posts/cppblog/2009-12-20-random-thoughts-series-1-cpp-thoughts-en/</link><pubDate>Sun, 20 Dec 2009 00:00:00 +0800</pubDate><guid>https://rmmod.com/posts/cppblog/2009-12-20-random-thoughts-series-1-cpp-thoughts-en/</guid><description>&lt;p>After diving deep into the internal structure of STL and some of the deeper mechanisms and techniques of C++, a question that every programmer must face suddenly emerged.&lt;/p>
&lt;p>&lt;strong>Why Programming in C++?&lt;/strong>&lt;/p>
&lt;p>Why should I choose C++ over the simple and pure C, or the flexible and comprehensive JAVA and C#?&lt;/p>
&lt;p>Browsing through various technical forums and blogs of experts, everyone is arguing for their favorite language. C#/JAVA programmers say: don&amp;rsquo;t reinvent the wheel, with a good language platform and rich comprehensive libraries, you can focus on more important aspects like architecture and software engineering. Why be obsessed with the surface foundations of the language? The C++ standard doesn&amp;rsquo;t even have basic GUI libraries and network libraries. Even BJ, the creator of C++, wants to develop C++ into a platform.&lt;/p></description></item></channel></rss>